---
name: (internal) Download tarballs

on:
  workflow_call:
    inputs:
      state_name: { type: string, required: true }
      container_name:
        {
          type: string,
          required: false,
          default: "ghcr.io/tzarc/qmk_toolchains:base",
        }

env:
  TC_WORKDIR: "/t"
  EXECUTE_UNDER_DOCKER: true

jobs:
  tarballs:
    if: always() && !cancelled()

    name: Download required tarballs
    runs-on: ubuntu-latest

    steps:
      - name: Setup docker workspace
        run: |
          sudo mkdir $TC_WORKDIR
          sudo mount --bind $GITHUB_WORKSPACE $TC_WORKDIR

      - name: Clone toolchains repo
        uses: actions/checkout@v4

      - name: Cache check
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            tarballs.tar.zst
          #key: cache-tarballs-${{ inputs.state_name }}-${{ hashFiles('.github/workflows/**', '*.sh', 'Dockerfile*', 'common.bashinc') }}
          key: cache-tarballs-${{ inputs.state_name }}-${{ hashFiles('*.sh', 'Dockerfile*', 'common.bashinc') }}

      - name: Gather source tarballs
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -x
          ./download_tarballs.sh
          # Clear out the tools prefix so we can run everything, even without a bootstrap compiler present
          for f in $(ls -1 *.sh | grep -E 'target_'); do
            ./$f --tools-prefix= source --container-image=${{ inputs.container_name }}
          done
          tar acvf tarballs.tar.zst tarballs

      - name: Upload source tarballs
        uses: actions/upload-artifact@v4
        with:
          name: tarballs
          path: tarballs.tar.zst
