---
name: 1. (tzarc) Create Build Container

on:
  workflow_dispatch:
  schedule:
    - cron: "4 3 */6 * *" # every 6 days to keep cache

permissions:
  contents: read
  packages: write

env:
  TC_WORKDIR: "/t"
  EXECUTE_UNDER_DOCKER: true
  CROSSTOOL_REPO_REF: 7f9d7043cc3f39bbcd0e197fff0142c383a5b751

jobs:
  base_container:
    # only actually execute on @tzarc's repo so as to not lock up QMK org's resources
    if: github.repository == 'tzarc/qmk_toolchains'

    name: Create `base` container
    runs-on: ubuntu-latest

    steps:
      - name: Move docker data root to /mnt for more space
        run: |
          set -x
          DOCKER_DATA_ROOT='/mnt/var/lib/docker'
          DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
          sudo mkdir -p "${DOCKER_DATA_ROOT}"
          echo "{\"data-root\": \"${DOCKER_DATA_ROOT}\"}" | sudo tee "${DOCKER_DAEMON_JSON}"
          sudo systemctl restart docker
          sudo df -h

      - name: Clone toolchains repo
        uses: actions/checkout@v5

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base
          build-args: |
            CROSSTOOL_REPO_REF=${{ env.CROSSTOOL_REPO_REF }}
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/tzarc/qmk_toolchains:base

  tarballs:
    if: always() && !cancelled()
    name: Download required tarballs
    needs: [base_container]
    uses: ./.github/workflows/download_tarballs.yaml
    with:
      state_name: create_build_container
      container_name: ghcr.io/tzarc/qmk_toolchains:base

  # Build a copy of linux/X64 toolchain to bootstrap the rest so that the resulting compilers are compatible with the old glibc.
  bootstrap-linuxX64-toolchain:
    if: always() && !cancelled()
    name: Build bootstrap linuxX64 toolchain
    needs: [tarballs]
    uses: ./.github/workflows/create_one_toolchain.yaml
    with:
      crosstool_host_os: linuxX64
      build_host: linuxX64
      target_host: linuxX64
      build_script: host_linuxX64-target_linuxX64_qmk_bootstrap.sh
      fetch_bootstrap: false
      toolchain_suffix: "_qmk_bootstrap"

  # Build base toolchains for the other platforms
  base-toolchains:
    if: always() && !cancelled()
    name: Build base toolchains
    needs: [bootstrap-linuxX64-toolchain]
    strategy:
      fail-fast: false
      matrix:
        target_host: [linuxX64, linuxARM64, linuxRV64, windowsX64]
    uses: ./.github/workflows/create_one_toolchain.yaml
    with:
      crosstool_host_os: linuxX64
      build_host: linuxX64
      target_host: ${{ matrix.target_host }}
      build_script: host_linuxX64-target_${{ matrix.target_host }}.sh

  # Overall builder container
  builder-container:
    if: always() && !cancelled()
    name: Create `builder` container
    needs: [base-toolchains]
    runs-on: ubuntu-latest
    steps:
      - name: Clone toolchains repo
        uses: actions/checkout@v5

      - name: Download toolchains
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: toolchain-host_linuxX64-target_*

      - name: List directory
        run: |
          set -x
          ls -l

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.builder
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/tzarc/qmk_toolchains:builder
